{namespace desktop.directory}

/**
 * Template that displays all states in the directory in a list view with a map of the united states.
 * @param isHttps
 * @param logo The business logo that is displayed in the header
 * @param baseUrl String the base url of current directory page
 * @param locationCount Number of locations in current directory
 * @param keys List of Objects: {key (name of this next directory level),
 *                               loc (location information of a location in this directory),
 *                               url (url of this directory level),
 *                               count(number of locations in this directory level)}
 * @param crumbNames Sorted list of breadcrumb names
 * @param crumbUrls Sorted list of breadcrumb urls
 */
{template .stateList}
  {call helpers.header data="all"}
      {param title: 'Directory - States'/}
  {/call}
      <h3>Keys</h3>
      <p>Total Locations: {$locationCount}</p>
      <ul>
        {foreach $key in $keys}
            <li><a href="{$baseUrl}{$key.url}">{$key.key}</a> ({$key.count}) [{lregionName('en', $key.loc.country, $key.key)}]</li>
        {/foreach}
      </ul>
  {call helpers.footer data="all"/}
{/template}

/**
 * Template that displays all keys in the directory in a list view with a dynamic map.
 * @param isHttps
 * @param logo The business logo that is displayed in the header
 * @param baseUrl String the base url of current directory page
 * @param locationCount Number of locations in current directory
 * @param keys List of Objects: {key (name of this next directory level),
 *                               loc (location information of a location in this directory),
 *                               url (url of this directory level),
 *                               count(number of locations in this directory level)}
 * @param crumbNames Sorted list of breadcrumb names
 * @param crumbUrls Sorted list of breadcrumb urls
 */
{template .cityList}
  {call helpers.header data="all"}
      {param title: 'Directory - Cities'/}
  {/call}
      <h3>Keys</h3>
      <p>Total Locations: {$locationCount}</p>
      <ul>
        {foreach $key in $keys}
            <li><a href="{$baseUrl}{$key.url}">{$key.key}</a> ({$key.count})</li>
        {/foreach}
      </ul>
  {call helpers.footer data="all"/}
{/template}
something
/**
 * Template that displays all locations in the directory in a list view with a dynamic map.
 * @param isHttps
 * @param logo The business logo that is displayed in the header
 * @param baseUrl String the base url of current directory page
 * @param locationCount Number of locations in current directory
 * @param keys List of Objects: {key (name of this next directory level),
 *                               loc (location information of a location in this directory),
 *                               url (url of this directory level),
 *                               count(number of locations in this directory level)}
 * @param crumbNames Sorted list of breadcrumb names
 * @param crumbUrls Sorted list of breadcrumb urls
 * @param locale
 */
{template .locationList}
  {call helpers.header data="all"}
      {param title: 'Directory - Locations'/}
  {/call}
      <h3>Keys</h3>
      <p>Total Locations: {$locationCount}</p>
      <ul>
        {foreach $key in $keys}

        {let $loc: $key.loc /}
        <li>
              {if $key.url}
              <a href="{$baseUrl}{$key.url}">{$key.key}</a> (<a href="{$baseUrl}/alias1/{$key.url}">alias 1</a>) (<a href="{$baseUrl}/alias2/{$key.url}">alias 2</a>)
              {else}
               {$key.key}
              {/if}
              ({$key.count})
              <p/>
              {$loc.phones}
         </li>

        {/foreach}
      </ul>
  {call helpers.footer data="all"/}
{/template}
